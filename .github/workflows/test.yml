name: Test

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-go@v3'
      with:
        go-version: '1.14'

    - uses: 'golangci/golangci-lint-action@v3'
      with:
        version: 'v1.50.1'
        only-new-issues: true
        skip-cache: true
        skip-pkg-cache: true
        skip-build-cache: true
        args: >-
          --enable=${{ join(fromJson('[
            "asciicheck",
            "bidichk",
            "bodyclose",
            "containedctx",
            "depguard",
            "dogsled",
            "errcheck",
            "errchkjson",
            "errname",
            "errorlint",
            "exhaustive",
            "exportloopref",
            "forcetypeassert",
            "godot",
            "gofumpt",
            "goheader",
            "goimports",
            "gomodguard",
            "goprintffuncname",
            "gosec",
            "gosimple",
            "govet",
            "ifshort",
            "ineffassign",
            "makezero",
            "noctx",
            "nolintlint",
            "prealloc",
            "predeclared",
            "revive",
            "sqlclosecheck",
            "staticcheck",
            "stylecheck",
            "tenv",
            "thelper",
            "tparallel",
            "typecheck",
            "unconvert",
            "unused",
            "whitespace",
          ]'), ',') }}
          --max-issues-per-linter=0
          --max-same-issues=0
          --timeout=5m

  test:
    strategy:
      matrix:
        platform:
        - 'macos-latest'
        - 'ubuntu-latest'
        - 'windows-latest'

    runs-on: '${{ matrix.platform }}'

    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-go@v3'
      with:
        go-version: '1.14'

    - run: 'make test-acc'
